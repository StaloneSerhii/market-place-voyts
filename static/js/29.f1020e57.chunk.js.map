{"version":3,"file":"static/js/29.f1020e57.chunk.js","mappings":"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","sources":["components/settings/mystore.jsx"],"sourcesContent":["import { BsFillArrowDownSquareFill } from 'react-icons/bs';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getHistoryProduct } from 'redux/operations';\nimport { Link } from 'react-router-dom';\n\nconst MyStore = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getHistoryProduct());\n  }, [dispatch]);\n  const stateHistory = useSelector(\n    state => state.persistedReducerAdd.buyProduct.history\n  );\n\n  // Створимо масив станів для кожного елементу інформації\n  const [addInfoArray, setAddInfoArray] = useState(\n    new Array(stateHistory.length).fill(true)\n  );\n\n  // Функція для зміни стану для конкретного елементу інформації\n  const toggleAddInfo = index => {\n    const newArray = [...addInfoArray];\n    newArray[index] = !newArray[index];\n    setAddInfoArray(newArray);\n  };\n\n  return (\n    <div className=\"mystore\">\n      <h3 className=\"mystore__h3\">Мої замовлення</h3>\n      <div className=\"mystore__info\">\n        <div className=\"block__filter\" style={{ margin: '0' }}>\n          <input type=\"text\" placeholder=\"Пошук\" className=\"find__input\" />\n          <div className=\"line\"></div>\n          <select id=\"size\" name=\"size\">\n            <option value=\"last\" select=\"true\">\n              Остані додані\n            </option>\n            <option value=\"expensive\">Від дорогих до дешевих</option>\n            <option value=\"cheap\">Від дешевих до дорогих</option>\n          </select>\n        </div>\n        <ul className=\"list__store\">\n          {stateHistory.length > 0 &&\n            stateHistory.map((pr, index) => (\n              <li className=\"list__store--item\" key={pr._id}>\n                <div className=\"list__store--mainBlock\">\n                  <div\n                    style={{\n                      display: 'flex',\n                      flexDirection: 'row',\n                      alignItems: 'center',\n                    }}\n                  >\n                    <div\n                      className=\"status__pr\"\n                      style={{\n                        backgroundColor:\n                          (pr.status === 'pending' && 'gray') ||\n                          (pr.status === 'rejected' && 'red') ||\n                          (pr.status === 'fullfild' && 'green'),\n                      }}\n                    ></div>\n                    <span>\n                      № {pr._id.slice(18, 30)} від {pr.createdAt.slice(0, 10)}\n                      <br />\n                      <span>\n                        {(pr.status === 'pending' &&\n                          'Очікується підтвердження') ||\n                          (pr.status === 'rejected' && 'Скасовано') ||\n                          (pr.status === 'fullfild' && 'Відправлено')}\n                      </span>\n                    </span>\n                  </div>\n                  <ul className=\"list__product--user\">\n                    {pr.select.map(product => (\n                      <li\n                        style={{ display: 'flex', gap: '15px' }}\n                        key={product._id}\n                      >\n                        <p>{product.name}</p>\n                        <p>\n                          Ціна: <br />\n                          <span>{product.price} грн</span>\n                        </p>\n                        <p>\n                          Кількість: <br />\n                          <span>{product.count} грн</span>\n                        </p>\n                        <Link\n                          to={`/product/${product._id}`}\n                          style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            alignItems: 'center',\n                          }}\n                        >\n                          <img src={product.img[0]} alt=\"img\" width=\"110px\" />\n                        </Link>\n                      </li>\n                    ))}\n                  </ul>\n                  <button\n                    style={{\n                      marginLeft: '15px',\n                      fontSize: '25px',\n                      color: 'green',\n                    }}\n                    onClick={() => toggleAddInfo(index)} // Використовуйте функцію для зміни стану для конкретного елементу\n                  >\n                    <BsFillArrowDownSquareFill />\n                  </button>\n                </div>\n                <div\n                  className={\n                    addInfoArray[index]\n                      ? 'list__store--mainBlock none'\n                      : 'list__store--mainBlock '\n                  }\n                >\n                  <p>\n                    Оплата:\n                    <br />\n                    <span>{pr.values.oplata.slice(0, 22)}</span>\n                  </p>\n                  <p>\n                    Замовник: <br />\n                    <span>\n                      {pr.values.name}\n                      {pr.values.fename}\n                    </span>\n                  </p>\n                  <p>\n                    Доставка:\n                    <br /> <span>міто: {pr.values.city}</span>\n                    <br />\n                    <span>Віділення: {pr.values.viddill}</span>\n                  </p>\n                  <button\n                    type=\"button\"\n                    disabled={pr.status === 'pending' && 'true'}\n                    style={{\n                      backgroundColor: pr.status === 'pending' ? 'red' : 'gray',\n                      color: 'white',\n                      padding: '10px',\n                      borderRadius: '10px',\n                    }}\n                  >\n                    Скасувати\n                    <br />\n                    замовлення\n                  </button>\n                </div>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\nexport default MyStore;\n"],"names":["dispatch","useDispatch","useEffect","getHistoryProduct","stateHistory","useSelector","state","persistedReducerAdd","buyProduct","history","_useState","useState","Array","length","fill","_useState2","_slicedToArray","addInfoArray","setAddInfoArray","_jsxs","className","children","_jsx","style","margin","type","placeholder","id","name","value","select","map","pr","index","display","flexDirection","alignItems","backgroundColor","status","_id","slice","createdAt","product","gap","price","count","Link","to","concat","src","img","alt","width","marginLeft","fontSize","color","onClick","newArray","_toConsumableArray","toggleAddInfo","BsFillArrowDownSquareFill","values","oplata","fename","city","viddill","disabled","padding","borderRadius"],"sourceRoot":""}