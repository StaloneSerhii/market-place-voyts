{"version":3,"file":"static/js/357.80c028fd.chunk.js","mappings":"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","sources":["components/settings/settingUser.jsx"],"sourcesContent":["import { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport * as Yup from 'yup';\nimport { getAuth } from 'redux/authPer/auth-selector';\nimport { AiFillEye, AiFillEyeInvisible, AiFillSetting } from 'react-icons/ai';\nimport { changeUserData } from 'redux/operations';\nimport { useLocation } from 'react-router-dom';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short name!')\n    .max(35, 'Too Long name!')\n    .required('Name is required'),\n  fename: Yup.string()\n    .min(2, 'Too Short name!')\n    .max(35, 'Too Long name!')\n    .required('Name is required'),\n  email: Yup.string().email('Invalid email').required('Email is required'),\n  phone: Yup.string()\n    .min(14, 'Too Short name!')\n    .max(14, 'Too Long name!')\n    .notRequired(),\n  password: Yup.string().min(6, 'Short password!'),\n  newpassword: Yup.string().min(6, 'Short password!'),\n});\n\nconst SerringProfile = () => {\n  const dispath = useDispatch();\n  const [hiddenPass, setHiddenPass] = useState(false);\n  const [hiddenNewPass, setHiddenNewPass] = useState(false);\n  const selecAuth = useSelector(getAuth);\n  const [isFormChanged, setIsFormChanged] = useState(true);\n  const { user } = selecAuth;\n  const location = useLocation();\n  const { pathname } = location;\n\n  const initialValues = {\n    name: user.name,\n    fename: user.fename,\n    email: user.email,\n    phone: user.phone,\n    password: '',\n    newPassword: '',\n  };\n\n  // Відправка форми після замовлення\n  const formik = useFormik({\n    initialValues,\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      if (formik.values.newPassword && formik.values.password) {\n        return dispath(changeUserData(values));\n      }\n      const { newPassword, password, ...obj } = values;\n      dispath(changeUserData(obj));\n    },\n  });\n\n  // Збереження ведених даних в форму\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    formik.setFieldValue(name, value);\n    setIsFormChanged(true);\n  };\n\n  // Корекція веденого номера тел\n  const handlePhoneNumberChange = e => {\n    let value = e.target.value;\n    value = value.replace(/\\D/g, '');\n    if (value.length > 3 && value.length <= 6) {\n      value = value.slice(0, 3) + ' ' + value.slice(3);\n    } else if (value.length > 6) {\n      value =\n        value.slice(0, 2) + '(' + value.slice(2, 5) + ')' + value.slice(5);\n    }\n    formik.setFieldValue('phone', value);\n  };\n  return (\n    <>\n      <div className=\"register\">\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <h2 className=\"register-text\">\n            {pathname === '/profile/settings' ? 'Мій профіль' : 'РЕРЕЄСТРАЦІЯ'}\n          </h2>\n          <button\n            style={{ color: '#278032', fontSize: '30px' }}\n            title=\"Скинути історію профілю\"\n          >\n            <AiFillSetting />\n          </button>\n        </div>\n        <form onSubmit={formik.handleSubmit}>\n          <div className=\"form__register\">\n            <div>\n              <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Імя\"\n                onBlur={formik.handleBlur}\n                value={formik.values.name}\n                onChange={handleInputChange}\n                style={\n                  formik.touched.name && formik.errors.name\n                    ? { border: '1px solid red' }\n                    : { border: '1px solid transparent' }\n                }\n              />\n              <input\n                type=\"text\"\n                name=\"fename\"\n                placeholder=\"Прізвище\"\n                onBlur={formik.handleBlur}\n                value={formik.values.fename}\n                onChange={handleInputChange}\n                style={\n                  formik.touched.fename && formik.errors.fename\n                    ? { border: '1px solid red' }\n                    : { border: '1px solid transparent' }\n                }\n              />\n              <input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onBlur={formik.handleBlur}\n                value={formik.values.email}\n                onChange={handleInputChange}\n                style={\n                  formik.touched.email && formik.errors.email\n                    ? { border: '1px solid red' }\n                    : { border: '1px solid transparent' }\n                }\n              />\n            </div>\n\n            <div style={{ position: 'relative' }}>\n              <input\n                type=\"tel\"\n                name=\"phone\"\n                placeholder=\"380(00)000-00-00\"\n                onBlur={formik.handleBlur}\n                value={formik.values.phone}\n                onChange={handlePhoneNumberChange}\n                style={\n                  formik.touched.phone && formik.errors.phone\n                    ? { border: '1px solid red' }\n                    : { border: '1px solid transparent' }\n                }\n              />\n              <input\n                type={!hiddenPass ? 'password' : 'text'}\n                name=\"password\"\n                placeholder=\"Пароль\"\n                onBlur={formik.handleBlur}\n                value={formik.values.password}\n                onChange={handleInputChange}\n                style={\n                  formik.touched.password && formik.errors.password\n                    ? { border: '1px solid red' }\n                    : { border: '1px solid transparent' }\n                }\n              />\n              {!hiddenPass ? (\n                <AiFillEyeInvisible\n                  style={{\n                    position: 'absolute',\n                    top: '85px',\n                    right: '25px',\n                    cursor: 'pointer',\n                    fontSize: '22px',\n                  }}\n                  onClick={() => setHiddenPass(!hiddenPass)}\n                />\n              ) : (\n                <AiFillEye\n                  style={{\n                    position: 'absolute',\n                    top: '85px',\n                    right: '25px',\n                    cursor: 'pointer',\n                    fontSize: '22px',\n                  }}\n                  onClick={() => setHiddenPass(!hiddenPass)}\n                />\n              )}\n              {formik.values.password ? (\n                <input\n                  disabled={!formik.values.password}\n                  required={formik.values.password}\n                  type={!hiddenNewPass ? 'password' : 'text'}\n                  id=\"password\"\n                  name=\"newPassword\"\n                  placeholder=\"Повторити пароль\"\n                  onBlur={formik.handleBlur}\n                  value={formik.values.newPassword}\n                  onChange={handleInputChange}\n                  style={\n                    formik.touched.newPassword && formik.errors.newPassword\n                      ? { border: '1px solid red' }\n                      : { border: '1px solid transparent' }\n                  }\n                />\n              ) : (\n                <input\n                  className=\"diss\"\n                  disabled={!formik.values.password}\n                  required={formik.values.password}\n                  type={!hiddenNewPass ? 'password' : 'text'}\n                  id=\"password\"\n                  name=\"newPassword\"\n                  placeholder=\"Повторити пароль\"\n                  onBlur={formik.handleBlur}\n                  value={formik.values.newPassword}\n                  onChange={handleInputChange}\n                  style={\n                    formik.touched.newPassword && formik.errors.newPassword\n                      ? { border: '1px solid red' }\n                      : { border: '1px solid transparent' }\n                  }\n                />\n              )}\n              {!hiddenNewPass ? (\n                <AiFillEyeInvisible\n                  style={{\n                    position: 'absolute',\n                    top: '150px',\n                    right: '25px',\n                    cursor: 'pointer',\n                    fontSize: '22px',\n                  }}\n                  onClick={() => setHiddenNewPass(!hiddenNewPass)}\n                />\n              ) : (\n                <AiFillEye\n                  style={{\n                    position: 'absolute',\n                    top: '150px',\n                    right: '25px',\n                    cursor: 'pointer',\n                    fontSize: '22px',\n                  }}\n                  onClick={() => setHiddenNewPass(!hiddenNewPass)}\n                />\n              )}\n            </div>\n          </div>\n          <div className=\"form__item profile\">\n            <button\n              className=\"formLogin__btn\"\n              type=\"submit\"\n              disabled={!isFormChanged}\n            >\n              Зберегти зміни\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\nexport default SerringProfile;\n"],"names":["validationSchema","Yup","shape","name","min","max","required","fename","email","phone","notRequired","password","newpassword","dispath","useDispatch","_useState","useState","_useState2","_slicedToArray","hiddenPass","setHiddenPass","_useState3","_useState4","hiddenNewPass","setHiddenNewPass","selecAuth","useSelector","getAuth","_useState5","_useState6","isFormChanged","setIsFormChanged","user","pathname","useLocation","initialValues","newPassword","formik","useFormik","onSubmit","values","changeUserData","obj","_objectWithoutProperties","_excluded","handleInputChange","event","_event$target","target","value","setFieldValue","_jsx","_Fragment","children","_jsxs","className","style","display","justifyContent","color","fontSize","title","AiFillSetting","handleSubmit","type","placeholder","onBlur","handleBlur","onChange","touched","errors","border","position","e","replace","length","slice","AiFillEye","top","right","cursor","onClick","AiFillEyeInvisible","disabled","id"],"sourceRoot":""}